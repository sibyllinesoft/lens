{
  "name": "@sibyllinesoft/lens",
  "version": "1.0.0-rc.2",
  "type": "module",
  "description": "Lightning-fast code search with semantic understanding - search your entire codebase in sub-millisecond time with fuzzy matching, AST parsing, and natural language queries",
  "main": "dist/index.js",
  "bin": {
    "lens": "./dist/cli.js",
    "deploy": "./deploy-cli.js"
  },
  "scripts": {
    "build": "tsc",
    "build:validate": "npm run validate:readme-metrics && tsc",
    "validate:readme-metrics": "echo 'validate-readme-metrics script not found'",
    "dev": "tsx watch src/server.ts",
    "start": "node dist/server.js",
    "test": "vitest",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "lint": "eslint src/**/*.ts",
    "fmt": "prettier --write src/**/*.ts",
    "validate:config": "cue eval configurations/settings/architecture.cue",
    "validate:production": "cue export configurations/settings/architecture.cue --expression lens_production",
    "deploy:production": "tsx automation/scripts/execute-gemma256-production-deployment.ts",
    "deploy:production:dry-run": "tsx automation/scripts/execute-gemma256-production-deployment.ts --dry-run",
    "deploy:production:verbose": "tsx automation/scripts/execute-gemma256-production-deployment.ts --verbose",
    "benchmark:smoke": "tsx src/benchmark/cli-integration.ts smoke",
    "benchmark:full": "tsx src/benchmark/cli-integration.ts nightly",
    "benchmark:report": "tsx src/benchmark/cli-integration.ts report",
    "benchmark:validate": "tsx src/benchmark/cli-integration.ts validate-ci",
    "benchmark:legacy-smoke": "node scripts/nightly-benchmark.js run-suite --suite-type smoke",
    "benchmark:legacy-full": "node scripts/nightly-benchmark.js run-suite --suite-type full",
    "gates:smoke": "tsx src/benchmark/cli-integration.ts smoke",
    "gates:nightly": "tsx src/benchmark/cli-integration.ts nightly",
    "gates:validate": "tsx src/benchmark/cli-integration.ts validate-ci",
    "gates:report": "tsx src/benchmark/cli-integration.ts report",
    "phase4:tests": "tsx automation/scripts/run-phase4-tests.ts",
    "phase4:monitor": "tsx src/benchmark/operational-monitoring.ts",
    "phased:execute": "tsx src/scripts/phase-d-integration.ts execute",
    "phased:monitor": "tsx src/scripts/phase-d-integration.ts monitor",
    "phased:validate": "tsx src/scripts/phase-d-integration.ts validate",
    "phased:report": "tsx src/scripts/phase-d-integration.ts report",
    "rc:cut": "npx tsx -e 'import(\"./dist/cli.js\").then(m => m.default([\"cut-rc\"]))'",
    "rc:compat-drill": "npx tsx -e 'import(\"./dist/cli.js\").then(m => m.default([\"compat-drill\"]))'",
    "rc:nightly": "npx tsx -e 'import(\"./dist/cli.js\").then(m => m.default([\"nightly-validation\"]))'",
    "rc:check-signoff": "npx tsx -e 'import(\"./dist/cli.js\").then(m => m.default([\"check-signoff\"]))'",
    "rc:promote": "npx tsx -e 'import(\"./dist/cli.js\").then(m => m.default([\"promote\"])))'",
    "phase-d:canary-status": "curl -s http://localhost:3000/canary/status | jq .",
    "phase-d:progress-canary": "curl -s -X POST http://localhost:3000/canary/progress | jq .",
    "phase-d:kill-switch": "curl -s -X POST http://localhost:3000/canary/killswitch -d '{\"reason\":\"Manual testing\"}' -H 'Content-Type: application/json' | jq .",
    "phase-d:quality-gates": "curl -s -X POST http://localhost:3000/validation/quality-gates | jq .",
    "phase-d:nightly-validation": "curl -s -X POST http://localhost:3000/validation/nightly -d '{\"duration_minutes\":30}' -H 'Content-Type: application/json' | jq .",
    "phase-d:validation-status": "curl -s http://localhost:3000/validation/status | jq .",
    "phase-d:dashboard": "curl -s http://localhost:3000/monitoring/dashboard | jq .",
    "phase-d:signoff-report": "curl -s http://localhost:3000/validation/signoff-report | jq .",
    "governance:demo": "tsx src/scripts/governance-validation-demo.ts",
    "governance:full": "tsx src/scripts/governance-validation-demo.ts --full",
    "governance:audit": "tsx src/scripts/governance-validation-demo.ts --audit-bundle",
    "governance:redteam": "tsx src/scripts/governance-validation-demo.ts --redteam",
    "governance:power": "tsx src/scripts/governance-validation-demo.ts --statistical-power",
    "governance:calibration": "tsx src/scripts/governance-validation-demo.ts --calibration",
    "governance:testing": "tsx src/scripts/governance-validation-demo.ts --multiple-testing",
    "test:phase-d": "vitest run src/__tests__/phase-d-integration.test.ts",
    "test:lsp-serena": "echo 'run-lsp-serena-comparison script not found'",
    "test:lsp-serena-unit": "vitest run src/__tests__/lsp-serena-comparison.test.ts",
    "deploy": "tsx deploy-cli.ts",
    "deploy:start": "tsx deploy-cli.ts start",
    "deploy:status": "tsx deploy-cli.ts status",
    "deploy:canary": "tsx deploy-cli.ts canary status",
    "deploy:monitor": "tsx deploy-cli.ts monitor status",
    "deploy:sentinel": "tsx deploy-cli.ts sentinel status",
    "deploy:bench": "tsx deploy-cli.ts bench run",
    "deploy:version": "tsx deploy-cli.ts version list",
    "deploy:abort": "tsx deploy-cli.ts abort",
    "deploy:help": "tsx deploy-cli.ts --help",
    "chaos:list": "tsx src/scripts/chaos-engineering-cli.ts list",
    "chaos:register": "tsx src/scripts/chaos-engineering-cli.ts register",
    "chaos:experiment": "tsx src/scripts/chaos-engineering-cli.ts experiment",
    "chaos:robustness": "tsx src/scripts/chaos-engineering-cli.ts robustness",
    "chaos:monitor": "tsx src/scripts/chaos-engineering-cli.ts monitor",
    "chaos:stop": "tsx src/scripts/chaos-engineering-cli.ts stop",
    "chaos:health": "tsx src/scripts/chaos-engineering-cli.ts health",
    "chaos:interactive": "tsx src/scripts/chaos-engineering-cli.ts interactive",
    "chaos:help": "tsx src/scripts/chaos-engineering-cli.ts --help",
    "mcp:dev": "tsx src/mcp/server.ts",
    "mcp:start": "node dist/mcp/server.js",
    "mcp:test": "tsx src/mcp/test-client.ts",
    "validate-paper-build": "echo 'validate-paper-build script not found'",
    "generate-complete-paper": "echo 'generate-complete-paper script not found'",
    "demo:enterprise": "tsx src/demo/enterprise-systems-demo.ts",
    "test:enterprise": "vitest run src/systems/*.test.ts"
  },
  "keywords": [
    "code-search",
    "search",
    "semantic-search",
    "fuzzy-search",
    "AST",
    "indexing",
    "code-intelligence",
    "developer-tools",
    "typescript",
    "javascript",
    "python",
    "performance",
    "enterprise",
    "self-hosted"
  ],
  "author": "Lens Search",
  "license": "LicenseRef-SPL-1.0",
  "dependencies": {
    "@fastify/cors": "^9.0.1",
    "@modelcontextprotocol/sdk": "^0.6.0",
    "@opentelemetry/api": "^1.7.0",
    "@opentelemetry/auto-instrumentations-node": "^0.41.0",
    "@opentelemetry/exporter-jaeger": "^1.17.2",
    "@opentelemetry/exporter-prometheus": "^0.45.0",
    "@opentelemetry/instrumentation": "^0.45.1",
    "@opentelemetry/sdk-node": "^0.45.1",
    "@types/lru-cache": "^7.10.10",
    "chalk": "^5.3.0",
    "commander": "^12.1.0",
    "fast-fuzzy": "^1.12.0",
    "fastify": "^4.24.3",
    "glob": "^11.0.3",
    "lru-cache": "^11.1.0",
    "nats": "^2.19.0",
    "node-fetch": "^3.3.2",
    "node-gyp": "^11.4.2",
    "ora": "^8.2.0",
    "pino": "^8.17.2",
    "roaring": "^2.4.0",
    "tar": "^7.4.3",
    "typescript-language-server": "^4.4.0",
    "uuid": "^9.0.1",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/hapi__catbox": "^12.1.0",
    "@types/hapi__shot": "^6.0.0",
    "@types/node": "^20.19.11",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "@vitest/coverage-v8": "^1.6.1",
    "@vitest/ui": "^1.6.1",
    "c8": "^10.1.3",
    "eslint": "^8.55.0",
    "prettier": "^3.1.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2",
    "vitest": "^1.6.1"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
