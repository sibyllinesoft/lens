version: '3.8'

services:
  lens:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "9999:9999"
    environment:
      - RUST_LOG=info
      - LENS_INDEX_PATH=/app/index
      - LENS_CORS_ENABLED=true
    volumes:
      - ./index:/app/index
      - ./indexed-content:/app/indexed-content
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  lens-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3001:3000"
      - "9998:9999"
    environment:
      - RUST_LOG=debug
      - LENS_INDEX_PATH=/app/index
      - LENS_CORS_ENABLED=true
      - CARGO_WATCH=1
    volumes:
      - .:/app
      - cargo-cache:/usr/local/cargo/registry
    command: cargo watch -x "run --bin lens -- serve --port 3000"
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

volumes:
  cargo-cache:
  redis-data:
  grafana-data: