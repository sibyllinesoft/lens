// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`NDJSON Output Snapshots > Error NDJSON > should format errors consistently > errors.ndjson 1`] = `
"{"error":"timeout","query":"very complex query","repo_sha":"abc123","stage":"stage_c","latency_ms":5000,"timestamp":"2024-01-01T12:00:00Z"}
{"error":"index_not_found","query":"simple query","repo_sha":"def456","stage":"stage_a","latency_ms":5,"timestamp":"2024-01-01T12:00:01Z"}"
`;

exports[`NDJSON Output Snapshots > Error NDJSON > should handle complex error objects > errors-complex.ndjson 1`] = `"{"error":"semantic_model_failure","query":"complex query with \\"quotes\\" and symbols","repo_sha":"complex123","stage":"stage_c","details":{"model_name":"all-MiniLM-L6-v2","error_type":"dimension_mismatch","expected_dimensions":384,"actual_dimensions":512,"stack_trace":["at SemanticEngine.embed (semantic.ts:42)","at SearchEngine.search (search-engine.ts:156)"]},"timestamp":"2024-01-01T12:00:00Z"}"`;

exports[`NDJSON Output Snapshots > NDJSON Format Validation > should escape JSON special characters properly > search-results-escaped.ndjson 1`] = `"{"file":"special.js","line":1,"col":1,"snippet":"const str = \\"He said \\\\\\"Hello\\\\\\" and then \\\\n left\\";","score":0.5,"why":["exact"],"context_after":"\\t// Tab character and \\"quotes\\""}"`;

exports[`NDJSON Output Snapshots > NDJSON Format Validation > should maintain consistent field ordering > search-results-field-order.ndjson 1`] = `"{"file":"test.js","line":5,"col":10,"lang":"javascript","snippet":"function test() {}","score":0.9,"why":["exact","symbol"],"ast_path":"Program > FunctionDeclaration","symbol_kind":"function","byte_offset":100,"span_len":18}"`;

exports[`NDJSON Output Snapshots > NDJSON Format Validation > should not contain line breaks within individual JSON objects > search-results-multiline.ndjson 1`] = `"{"file":"multiline.js","line":1,"col":1,"snippet":"const text = \`\\nHello\\nWorld\\n\`;","score":0.5,"why":["exact"]}"`;

exports[`NDJSON Output Snapshots > Search Results NDJSON > should format search results consistently > search-results.ndjson 1`] = `
"{"file":"src/components/Button.tsx","line":15,"col":8,"lang":"typescript","snippet":"const Button = ({ onClick, children }: ButtonProps) => {","score":0.95,"why":["exact","symbol"],"symbol_kind":"function","ast_path":"Program > VariableDeclaration > VariableDeclarator","byte_offset":342,"span_len":45,"context_before":"import React from \\"react\\";\\n\\n","context_after":"\\n  return (\\n    <button onClick={onClick}>"}
{"file":"src/utils/helpers.ts","line":23,"col":15,"lang":"typescript","snippet":"export function formatDate(date: Date): string {","score":0.87,"why":["exact","subtoken"],"symbol_kind":"function","ast_path":"Program > ExportNamedDeclaration > FunctionDeclaration","byte_offset":567,"span_len":47,"context_before":"// Date formatting utilities\\n","context_after":"\\n  return date.toISOString().split(\\"T\\")[0];"}
{"file":"docs/api.md","line":1,"col":1,"lang":"markdown","snippet":"# API Documentation","score":0.72,"why":["fuzzy"],"byte_offset":0,"span_len":18}"
`;

exports[`NDJSON Output Snapshots > Search Results NDJSON > should handle empty results > search-results-empty.ndjson 1`] = `""`;

exports[`NDJSON Output Snapshots > Search Results NDJSON > should handle results with minimal fields > search-results-minimal.ndjson 1`] = `"{"file":"test.js","line":1,"col":1,"score":0.5,"why":["exact"]}"`;

exports[`NDJSON Output Snapshots > Search Results NDJSON > should handle unicode and special characters > search-results-unicode.ndjson 1`] = `"{"file":"src/æµ‹è¯•.ts","line":1,"col":1,"snippet":"const message = \\"Hello ðŸ‘‹ ä¸–ç•Œ\\";","score":0.8,"why":["exact"],"context_before":"// æ³¨é‡Š\\n","context_after":"\\nconsole.log(\\"ðŸŽ‰\\");"}"`;

exports[`NDJSON Output Snapshots > Trace NDJSON > should format traces consistently > traces.ndjson 1`] = `
"{"trace_id":"trace-123","repo_sha":"abc123","query":"button component","stage":"stage_a","operation":"lexical_search","start_time":"2024-01-01T12:00:00.000Z","end_time":"2024-01-01T12:00:00.050Z","duration_ms":50,"candidates_found":15,"metadata":{"fuzzy_enabled":true,"max_edit_distance":2,"term_frequency":{"button":5,"component":3}}}
{"trace_id":"trace-123","repo_sha":"abc123","query":"button component","stage":"stage_b","operation":"symbol_resolution","start_time":"2024-01-01T12:00:00.050Z","end_time":"2024-01-01T12:00:00.120Z","duration_ms":70,"candidates_found":8,"metadata":{"ast_cache_hits":12,"ast_cache_misses":3,"symbol_types":["function","class","variable"]}}"
`;

exports[`NDJSON Output Snapshots > Trace NDJSON > should handle traces with nested metadata > traces-nested.ndjson 1`] = `"{"trace_id":"trace-456","repo_sha":"nested789","query":"nested query","stage":"stage_c","operation":"semantic_rerank","start_time":"2024-01-01T12:00:00.200Z","end_time":"2024-01-01T12:00:00.450Z","duration_ms":250,"candidates_found":50,"metadata":{"model_config":{"name":"all-MiniLM-L6-v2","dimensions":384,"batch_size":32},"performance":{"embeddings_cached":15,"embeddings_computed":35,"similarity_calculations":2500,"rerank_threshold":0.7},"quality_metrics":{"precision_at_5":0.85,"precision_at_10":0.78,"mrr":0.82}}}"`;
