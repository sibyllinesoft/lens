# Protocol v2.1 - Open-source leaders by tech slice with parity embeddings
# Covers capability slices, not brands: Lexical, Structural/AST, Hybrid, Pure ANN

embeddings:
  name: parity_gemma256            # Fixed OSS baseline for fair comparison
  query_preproc: normalize_nfc_lower_code
  doc_preproc:   normalize_nfc_lower_code
  cache: embeddings/.cache
  dim: 256

systems:
  # 1) Lexical / regex
  - id: ripgrep
    runner: docker://ghcr.io/burntsushi/ripgrep:latest
    prepare: ["rg","--version"]
    search:  ["rg","--json","--line-number","--column","{QUERY}","{CORPUS_ROOT}"]
    map: {path: "data.path.text", line: "data.line_number", col: "data.submatches[0].start"}
    supports: ["regex","substring"]
    slice: "lexical"

  - id: livegrep
    runner: docker://livegrep:latest
    prepare: ["codesearch","--index","/idx","--repos","repos.yaml"]
    search:  ["refinery","--index","/idx","--json","--timeout_ms","{SLA_MS}","{QUERY}"]
    supports: ["regex","substring"]
    slice: "lexical"

  - id: zoekt
    runner: docker://zoekt:latest
    prepare: ["zoekt-index","--incremental","--prefix","/idx","--","{CORPUS_ROOT}"]
    search:  ["zoekt","--index","/idx","--json","--timeout","{SLA_MS}ms","{QUERY}"]
    supports: ["regex","substring","symbol"]
    slice: "lexical"

  # 2) Structural / AST
  - id: comby
    runner: docker://comby/comby:latest
    search:  ["comby","-match-only","-matcher","{LANG}","{PATTERN}","{CORPUS_ROOT}","-json-lines"]
    supports: ["structural"]
    slice: "structural"

  - id: ast_grep
    runner: docker://ast-grep:latest
    search:  ["sg","-p","{PATTERN}","--json","--lang","{LANG}","{CORPUS_ROOT}"]
    supports: ["structural","symbol"]
    slice: "structural"

  # 3) Hybrid sparse + dense
  - id: opensearch_knn
    runner: docker://opensearchproject/opensearch:2
    prepare:
      - "curl -XPUT /idx -H 'Content-Type: application/json' -d @opensearch_schema.json"
      - "bulk_index {DOCS_JSONL}"
    search: ["curl","-s","-XPOST","/idx/_search?timeout={SLA_MS}ms","-d","@opensearch_query.json"]
    params: {bm25:true, knn:true, ef_search:128, m:16, topk:50}
    vectors: parity_gemma256
    supports: ["nl_to_span","symbol","substring"]
    slice: "hybrid"

  - id: vespa_hnsw
    runner: docker://vespaengine/vespa
    prepare: ["vespa-deploy","schemas/vespa.sd","&&","vespa-feed","{DOCS_JSONL}"]
    search:  ["curl","-s","http://localhost:8080/search/","-d","@vespa_query.json"]
    params: {ef_search:128, neighbors:50}
    vectors: parity_gemma256
    supports: ["nl_to_span","symbol","filter"]
    slice: "hybrid"

  - id: qdrant_hybrid
    runner: docker://qdrant/qdrant
    prepare: ["curl","-s","-XPUT","/collections/code","-d","@qdrant_schema.json"]
    search:  ["curl","-s","-XPOST","/collections/code/points/search","-d","@qdrant_query.json"]
    params: {hnsw_ef:128, re_ranking:"bm25_sparse"}
    vectors: parity_gemma256
    supports: ["nl_to_span","filter"]
    slice: "hybrid"

  # 4) Pure ANN libraries
  - id: faiss_ivf_pq
    runner: docker://faiss:latest
    prepare: ["faiss-build","--ivf","--pq","--dim=256","{EMB_PATH}"]
    search:  ["faiss-query","--k=50","--ef=128","{QUERY_EMB}"]
    vectors: parity_gemma256
    supports: ["nl_to_span"]
    slice: "pure_ann"

  - id: scann
    runner: docker://scann:latest
    prepare: ["scann-build","--tree=1","--anisotropic_quantization"]
    search:  ["scann-query","--k=50","{QUERY_EMB}"]
    vectors: parity_gemma256
    supports: ["nl_to_span"]
    slice: "pure_ann"

  # 5) Lens (for parity)
  - id: lens
    runner: docker://lens/current
    prepare: ["lens-indexer","--manifest","{MANIFEST}","--out","/idx"]
    search:  ["lens","/search","--json","--sla_ms","{SLA_MS}","--topk","50","--query","{QUERY}"]
    supports: ["nl_to_span","symbol","structural","regex"]
    slice: "multi_signal"

# Scenario routing matrix - only evaluate systems on scenarios they support
scenarios:
  regex:
    systems: ["ripgrep", "livegrep", "zoekt", "lens"]
    query_type: "pattern"
    
  substring:
    systems: ["ripgrep", "livegrep", "zoekt", "opensearch_knn", "lens"]
    query_type: "literal"
    
  structural:
    systems: ["comby", "ast_grep", "lens"]
    query_type: "ast_pattern"
    
  symbol:
    systems: ["zoekt", "ast_grep", "opensearch_knn", "vespa_hnsw", "lens"]
    query_type: "identifier"
    
  nl_to_span:
    systems: ["opensearch_knn", "vespa_hnsw", "qdrant_hybrid", "faiss_ivf_pq", "scann", "lens"]
    query_type: "natural_language"
    
  filter:
    systems: ["vespa_hnsw", "qdrant_hybrid", "lens"]
    query_type: "filtered_search"
    
  clone_heavy:
    systems: ["all"]  # All systems evaluated for similarity detection
    query_type: "similarity"
    
  noisy_bloat:
    systems: ["all"]  # All systems evaluated for signal extraction
    query_type: "signal_extraction"

# Fairness constraints
fairness:
  sla_ms: 150
  warmup_budget_queries: 100
  equal_index_time: true
  publish_index_sizes: true
  audit_configs: true